#include <iostream>
#include <list>
#include <vector>

class Spreadsheet {
public:
    void addRow(const std::vector<int>& row) {
        rows.push_back(row);
    }

    void deleteRow(size_t index) {
        if (index >= rows.size()) {
            std::cout << "Error: Invalid row index." << std::endl;
            return;
        }
        rows.erase(rows.begin() + index);
    }

    void display() const {
        size_t rowIndex = 1;
        for (const auto& row : rows) {
            std::cout << "Row " << rowIndex << ":" << std::endl;
            size_t colIndex = 1;
            for (int value : row) {
                std::cout << "Column " << colIndex++ << ": " << value << std::endl;
            }
            std::cout << std::endl;
            rowIndex++;
        }
    }

private:
    std::list<std::vector<int>> rows;
};

int main() {
    Spreadsheet sheet;

    // Add rows to the spreadsheet
    sheet.addRow({1, 2, 3});
    sheet.addRow({4, 5, 6});
    sheet.addRow({7, 8, 9});

    // Display the spreadsheet
    sheet.display();

    // Delete a row from the spreadsheet
    sheet.deleteRow(1);

    // Display the updated spreadsheet
    sheet.display();

    return 0;
}